
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TikTok Title & Description Generator</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');

        :root {
            --tiktok-red: #fe2c55;
            --tiktok-blue: #25f4ee;
            --tiktok-black: #010101;
            --tiktok-grey: #f1f1f2;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--tiktok-black);
            margin: 0;
            padding: 0;
            color: #333;
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }

        .background {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
        }

        .background:before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, var(--tiktok-black) 0%, #111 100%);
            opacity: 0.9;
        }

        .bubble {
            position: absolute;
            border-radius: 50%;
            background: linear-gradient(45deg, var(--tiktok-blue), var(--tiktok-red));
            filter: blur(10px);
            opacity: 0.3;
            animation: float 10s infinite ease-in-out;
        }

        .bubble:nth-child(1) {
            width: 180px;
            height: 180px;
            left: 10%;
            top: 60%;
            animation-delay: 0s;
        }

        .bubble:nth-child(2) {
            width: 120px;
            height: 120px;
            right: 15%;
            top: 30%;
            animation-delay: 2s;
            background: linear-gradient(45deg, var(--tiktok-red), var(--tiktok-blue));
        }

        .bubble:nth-child(3) {
            width: 150px;
            height: 150px;
            left: 50%;
            top: 70%;
            animation-delay: 4s;
        }

        .bubble:nth-child(4) {
            width: 100px;
            height: 100px;
            right: 30%;
            bottom: 10%;
            animation-delay: 6s;
            background: linear-gradient(45deg, #25f4ee, #a854f9);
        }

        .bubble:nth-child(5) {
            width: 80px;
            height: 80px;
            left: 30%;
            top: 20%;
            animation-delay: 8s;
            background: linear-gradient(45deg, #f9c724, var(--tiktok-red));
        }

        @keyframes float {
            0% {
                transform: translateY(0) rotate(0deg);
            }
            50% {
                transform: translateY(-40px) rotate(180deg);
            }
            100% {
                transform: translateY(0) rotate(360deg);
            }
        }

        .container {
            max-width: 800px;
            margin: 40px auto;
            background-color: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
            position: relative;
            overflow: hidden;
            z-index: 10;
        }

        .container:after {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 100px;
            height: 100px;
            background: linear-gradient(135deg, var(--tiktok-blue), var(--tiktok-red));
            border-radius: 0 0 0 100%;
            opacity: 0.7;
            z-index: -1;
        }

        .container:before {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 120px;
            height: 120px;
            background: linear-gradient(135deg, var(--tiktok-red), var(--tiktok-blue));
            border-radius: 0 100% 0 0;
            opacity: 0.7;
            z-index: -1;
        }

        h1 {
            text-align: center;
            color: var(--tiktok-red);
            margin-bottom: 30px;
            font-weight: 700;
            font-size: 2.5rem;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
            position: relative;
            display: inline-block;
            left: 50%;
            transform: translateX(-50%);
        }

        h1:after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 0;
            width: 100%;
            height: 3px;
            background: linear-gradient(90deg, var(--tiktok-blue), var(--tiktok-red));
            border-radius: 10px;
        }

        .form-group {
            margin-bottom: 25px;
            position: relative;
        }

        label {
            display: block;
            margin-bottom: 10px;
            font-weight: 600;
            color: #333;
            font-size: 1.1rem;
        }

        textarea, input, select {
            width: 100%;
            padding: 15px;
            border: 2px solid #ddd;
            border-radius: 12px;
            font-size: 16px;
            box-sizing: border-box;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
            font-family: 'Poppins', sans-serif;
        }

        textarea:focus, input:focus, select:focus {
            outline: none;
            border-color: var(--tiktok-blue);
            box-shadow: 0 0 0 3px rgba(37, 244, 238, 0.2);
        }

        select[multiple] {
            height: 150px;
        }

        button {
            position: relative;
            overflow: hidden;
            background-color: var(--tiktok-red);
            color: white;
            border: none;
            padding: 16px 30px;
            font-size: 18px;
            border-radius: 10px;
            cursor: pointer;
            width: 100%;
            margin-top: 15px;
            font-weight: 600;
            letter-spacing: 0.5px;
            transition: all 0.3s ease;
            z-index: 1;
            box-shadow: 0 4px 15px rgba(254, 44, 85, 0.3);
        }

        button:before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: all 0.5s ease;
            z-index: 2;
        }

        button:hover:before {
            left: 100%;
        }

        button:hover {
            transform: translateY(-3px);
            box-shadow: 0 7px 20px rgba(254, 44, 85, 0.4);
            background-color: #ff003c;
        }

        button:active {
            transform: translateY(0);
        }

        .result {
            margin-top: 40px;
            background-color: var(--tiktok-grey);
            padding: 25px;
            border-radius: 15px;
            display: none;
            animation: fadeIn 0.5s ease-out;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            position: relative;
            overflow: hidden;
        }

        .result:before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, var(--tiktok-blue), var(--tiktok-red));
            border-radius: 0 0 0 50px;
            opacity: 0.6;
        }

        .result h2 {
            margin-top: 0;
            color: var(--tiktok-red);
            font-size: 1.5rem;
            font-weight: 600;
            display: flex;
            align-items: center;
        }

        .result h2:before {
            content: '';
            width: 20px;
            height: 20px;
            background-color: var(--tiktok-blue);
            border-radius: 50%;
            margin-right: 10px;
            display: inline-block;
        }

        .result p {
            background-color: white;
            padding: 15px;
            border-radius: 8px;
            margin: 15px 0;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
            font-size: 1.1rem;
            line-height: 1.5;
        }

        .hashtag-container {
            margin-top: 20px;
        }

        .hashtag-container h3 {
            color: #333;
            margin-bottom: 10px;
            font-size: 1.2rem;
        }

        .generated-hashtags {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 10px;
        }

        .hashtag {
            background: linear-gradient(45deg, var(--tiktok-red), #ff6b87);
            color: white;
            padding: 5px 12px;
            border-radius: 30px;
            font-size: 14px;
            display: inline-block;
            animation: popIn 0.4s forwards;
            opacity: 0;
            transform: scale(0.8);
        }

        @keyframes popIn {
            to {
                opacity: 1;
                transform: scale(1);
            }
        }

        .loader {
            display: none;
            text-align: center;
            margin: 30px 0;
        }

        .music-wave {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 50px;
        }

        .music-wave span {
            display: block;
            width: 4px;
            height: 35px;
            background: linear-gradient(45deg, var(--tiktok-blue), var(--tiktok-red));
            margin: 0 3px;
            border-radius: 10px;
            animation: wave 1.5s infinite ease-in-out;
        }

        .music-wave span:nth-child(2) {
            animation-delay: 0.2s;
        }

        .music-wave span:nth-child(3) {
            animation-delay: 0.4s;
        }

        .music-wave span:nth-child(4) {
            animation-delay: 0.6s;
        }

        .music-wave span:nth-child(5) {
            animation-delay: 0.8s;
        }

        @keyframes wave {
            0%, 100% {
                transform: scaleY(0.5);
            }
            50% {
                transform: scaleY(1);
            }
        }

        .copy-btn {
            background: linear-gradient(45deg, #25d366, #128C7E);
            padding: 10px 15px;
            font-size: 14px;
            margin-top: 10px;
            border-radius: 8px;
            transform: none;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            width: auto;
            display: inline-block;
        }

        .copy-btn:hover {
            background: linear-gradient(45deg, #128C7E, #075E54);
        }

        .copy-btn:before {
            display: none;
        }

        /* Auto-generate hashtags switch */
        .switch-container {
            display: flex;
            align-items: center;
            margin-top: 10px;
            margin-bottom: 20px;
        }

        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 30px;
            margin-right: 10px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 34px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 22px;
            width: 22px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .slider {
            background: linear-gradient(45deg, var(--tiktok-blue), var(--tiktok-red));
        }

        input:checked + .slider:before {
            transform: translateX(30px);
        }

        /* Responsive */
        @media (max-width: 768px) {
            .container {
                margin: 20px;
                padding: 20px;
            }
            
            h1 {
                font-size: 2rem;
            }
            
            .bubble {
                opacity: 0.2;
            }
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body>
    <div class="background">
        <div class="bubble"></div>
        <div class="bubble"></div>
        <div class="bubble"></div>
        <div class="bubble"></div>
        <div class="bubble"></div>
    </div>

    <div class="container">
        <h1>TikTok Title & Description Generator</h1>
        
        <form id="generator-form">
            <div class="form-group">
                <label for="topic">What is your video about?</label>
                <textarea id="topic" rows="3" placeholder="Describe your video content, topic, or main idea" required></textarea>
            </div>
            
            <div class="form-group">
                <label for="style">Content Style</label>
                <select id="style" required>
                    <option value="">Select a style</option>
                    <option value="entertaining">Entertaining & Funny</option>
                    <option value="educational">Educational & Informative</option>
                    <option value="inspirational">Inspirational & Motivational</option>
                    <option value="tutorial">Tutorial & How-to</option>
                    <option value="storytelling">Storytelling & Personal</option>
                    <option value="trending">Trending & Viral</option>
                </select>
            </div>
            
            <div class="form-group">
                <label for="keywords">Trending Keywords/Hashtags</label>
                <div class="switch-container">
                    <label class="switch">
                        <input type="checkbox" id="auto-hashtags" checked>
                        <span class="slider"></span>
                    </label>
                    <span>Auto-generate hashtags based on title</span>
                </div>
                
                <select id="keywords" multiple>
                    <option value="#fyp">#fyp</option>
                    <option value="#foryou">#foryou</option>
                    <option value="#foryoupage">#foryoupage</option>
                    <option value="#viral">#viral</option>
                    <option value="#trending">#trending</option>
                    <option value="#tiktok">#tiktok</option>
                    <option value="#tiktoktrend">#tiktoktrend</option>
                    <option value="#tiktokviral">#tiktokviral</option>
                    <option value="#ok">#ok</option>
                    <option value="#love">#love</option>
                    <option value="#funny">#funny</option>
                    <option value="#fitness">#fitness</option>
                    <option value="#food">#food</option>
                    <option value="#dance">#dance</option>
                    <option value="#music">#music</option>
                    <option value="#comedy">#comedy</option>
                    <option value="#lifestyle">#lifestyle</option>
                </select>
                <small style="display: block; margin-top: 5px; color: #777;">Hold Ctrl/Cmd to select multiple hashtags</small>
            </div>
            
            <div class="form-group">
                <label for="targetAudience">Target Audience</label>
                <select id="targetAudience" required>
                    <option value="">Select an audience</option>
                    <option value="teens">Teens (13-17)</option>
                    <option value="young adults">Young Adults (18-24)</option>
                    <option value="adults">Adults (25-34)</option>
                    <option value="older adults">Older Adults (35+)</option>
                    <option value="parents">Parents</option>
                    <option value="students">Students</option>
                    <option value="professionals">Professionals</option>
                    <option value="fitness enthusiasts">Fitness Enthusiasts</option>
                    <option value="beauty lovers">Beauty Lovers</option>
                    <option value="gamers">Gamers</option>
                    <option value="foodies">Foodies</option>
                    <option value="travelers">Travelers</option>
                    <option value="tech enthusiasts">Tech Enthusiasts</option>
                    <option value="fashion enthusiasts">Fashion Enthusiasts</option>
                    <option value="creative people">Creative People</option>
                    <option value="business owners">Business Owners</option>
                </select>
            </div>
            
            <button type="submit" id="generate-btn">Generate Title & Description</button>
        </form>
        
        <div class="loader" id="loader">
            <div class="music-wave">
                <span></span>
                <span></span>
                <span></span>
                <span></span>
                <span></span>
            </div>
            <p>Generating viral content...</p>
        </div>
        
        <div class="result" id="result">
            <h2>Generated Title</h2>
            <p id="generated-title"></p>
            <button class="copy-btn" onclick="copyToClipboard('generated-title')">Copy Title</button>
            
            <h2>Generated Description</h2>
            <p id="generated-description"></p>
            <button class="copy-btn" onclick="copyToClipboard('generated-description')">Copy Description</button>
            
            <div class="hashtag-container">
                <h3>Auto-generated Hashtags</h3>
                <div id="generated-hashtags" class="generated-hashtags"></div>
                <button class="copy-btn" onclick="copyToClipboard('all-hashtags')">Copy All Hashtags</button>
                <p id="all-hashtags" style="display: none;"></p>
            </div>
        </div>
    </div>

    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9915086643477248"
     crossorigin="anonymous"></script>
<!-- OnlytoolsbdPost1 -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-9915086643477248"
     data-ad-slot="4341797543"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
    <div class="floating-bubbles" id="bubbles"></div>
    
    
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9915086643477248"
     crossorigin="anonymous"></script>
<ins class="adsbygoogle"
     style="display:block"
     data-ad-format="fluid"
     data-ad-layout-key="-cv+g-11-49+bi"
     data-ad-client="ca-pub-9915086643477248"
     data-ad-slot="9402552534"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9915086643477248"
     crossorigin="anonymous"></script>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-9915086643477248"
     data-ad-slot="9538283903"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>



<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9915086643477248"
     crossorigin="anonymous"></script>
<ins class="adsbygoogle"
     style="display:block"
     data-ad-format="autorelaxed"
     data-ad-client="ca-pub-9915086643477248"
     data-ad-slot="6912120565"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>


    <script>
        const apiKey = "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";
        
        // Audience-specific adjectives for titles and descriptions
        const audienceAdjectives = {
            "teens": ["lit", "fire", "sick", "cool", "dope"],
            "young adults": ["amazing", "incredible", "awesome", "mind-blowing", "epic"],
            "adults": ["effective", "valuable", "practical", "impressive", "essential"],
            "older adults": ["helpful", "useful", "beneficial", "straightforward", "valuable"],
            "parents": ["time-saving", "family-friendly", "helpful", "essential", "practical"],
            "students": ["easy", "quick", "clever", "brilliant", "game-changing"],
            "professionals": ["efficient", "effective", "professional", "strategic", "innovative"],
            "fitness enthusiasts": ["powerful", "energizing", "effective", "game-changing", "transformative"],
            "beauty lovers": ["stunning", "gorgeous", "flawless", "beautiful", "perfect"],
            "gamers": ["epic", "legendary", "insane", "game-changing", "next-level"],
            "foodies": ["delicious", "mouthwatering", "tasty", "irresistible", "incredible"],
            "travelers": ["breathtaking", "stunning", "amazing", "unforgettable", "life-changing"],
            "tech enthusiasts": ["cutting-edge", "innovative", "revolutionary", "mind-blowing", "next-gen"],
            "fashion enthusiasts": ["stylish", "trendy", "chic", "gorgeous", "stunning"],
            "creative people": ["inspiring", "creative", "mind-blowing", "innovative", "artistic"],
            "business owners": ["profitable", "effective", "strategic", "successful", "game-changing"]
        };
         
        // Bangla adjectives for different audiences
        const banglaAudienceAdjectives = {
            "teens": ["দারুণ", "মজার", "অসাধারণ", "কুল", "ট্রেন্ডি"],
            "young adults": ["অবিশ্বাস্য", "অসাধারণ", "চমৎকার", "মাইন্ড-ব্লোয়িং", "এপিক"],
            "adults": ["কার্যকর", "মূল্যবান", "ব্যবহারিক", "প্রভাবশালী", "অপরিহার্য"],
            "older adults": ["সহায়ক", "উপকারী", "লাভজনক", "সরল", "মূল্যবান"],
            "parents": ["সময়-সাশ্রয়ী", "পারিবারিক", "সহায়ক", "অপরিহার্য", "ব্যবহারিক"],
            "students": ["সহজ", "দ্রুত", "চতুর", "চমৎকার", "গেম-চেঞ্জিং"],
            "professionals": ["দক্ষ", "কার্যকর", "পেশাদার", "কৌশলগত", "উদ্ভাবনী"],
            "fitness enthusiasts": ["শক্তিশালী", "উদ্দীপক", "কার্যকর", "গেম-চেঞ্জিং", "রূপান্তরকারী"],
            "beauty lovers": ["সুন্দর", "চমৎকার", "নিখুঁত", "সৌন্দর্যময়", "পারফেক্ট"],
            "gamers": ["এপিক", "কিংবদন্তি", "অবিশ্বাস্য", "গেম-চেঞ্জিং", "পরবর্তী-স্তরের"],
            "foodies": ["সুস্বাদু", "জিভে জল আনা", "মজাদার", "অপ্রতিরোধ্য", "অবিশ্বাস্য"],
            "travelers": ["মনোরম", "সুন্দর", "অবাক করা", "অবিস্মরণীয়", "জীবন পরিবর্তনকারী"],
            "tech enthusiasts": ["অত্যাধুনিক", "উদ্ভাবনী", "বিপ্লবী", "মাইন্ড-ব্লোয়িং", "নেক্সট-জেন"],
            "fashion enthusiasts": ["স্টাইলিশ", "ট্রেন্ডি", "শিক", "সুন্দর", "চমৎকার"],
            "creative people": ["অনুপ্রেরণাদায়ক", "সৃজনশীল", "মাইন্ড-ব্লোয়িং", "উদ্ভাবনী", "আর্টিস্টিক"],
            "business owners": ["লাভজনক", "কার্যকর", "কৌশলগত", "সফল", "গেম-চেঞ্জিং"]
        };
        
        document.getElementById("generator-form").addEventListener("submit", async function(e) {
            e.preventDefault();
            
            const topic = document.getElementById("topic").value;
            const style = document.getElementById("style").value;
            const autoHashtags = document.getElementById("auto-hashtags").checked;
            
            // Get selected hashtags
            const keywordsSelect = document.getElementById("keywords");
            let selectedHashtags = [];
            for (let i = 0; i < keywordsSelect.options.length; i++) {
                if (keywordsSelect.options[i].selected) {
                    selectedHashtags.push(keywordsSelect.options[i].value);
                }
            }
            
            // Always include #ok if auto hashtags is enabled
            if (autoHashtags && !selectedHashtags.includes("#ok")) {
                selectedHashtags.push("#ok");
            }
            
            const keywords = selectedHashtags.join(" ");
            const targetAudience = document.getElementById("targetAudience").value;
            
            // Detect if the input is in Bangla language
            const isBangla = containsBangla(topic);
            console.log("Is Bangla detected:", isBangla);
            
            // Show loader
            document.getElementById("loader").style.display = "block";
            document.getElementById("result").style.display = "none";
            
            try {
                // Create the request body
                const requestBody = {
                    "model": "deepseek/deepseek-prover-v2:free", // Using the free model as specified
                    "messages": [
                        {
                            "role": "system",
                            "content": `You are a viral TikTok content creator expert specializing in crafting engaging titles and descriptions that get high views. Your task is to generate a catchy, attention-grabbing title and a compelling description for a TikTok video. The title should be brief but engaging (under 100 characters) and should reference AI-powered content when appropriate. The description should include relevant hashtags, be engaging, and follow TikTok best practices (under 150 characters). Be sure to create varied, unique titles that feel personalized and genuine.
                            
${isBangla ? "IMPORTANT: The user input is in Bangla language. You MUST respond with title and description in Bangla language ONLY. Do not use English." : ""}`
                        },
                        {
                            "role": "user",
                            "content": `Create a unique, viral TikTok title and description for a video with these details:
                            
Topic: ${topic}
Style: ${style}
Target Audience: ${targetAudience}
Keywords/Hashtags to include: ${keywords}
Important: Make the title mention AI or AI-generated content if it fits the topic. Ensure the title is unique and engaging.
${isBangla ? "IMPORTANT: You MUST respond in Bangla language ONLY. Do not use English." : ""}
${autoHashtags ? 'Also generate 5 additional relevant hashtags based on the title and topic.' : ''}

Respond in this exact format:
TITLE: [the catchy title]
DESCRIPTION: [the description with hashtags]
${autoHashtags ? 'ADDITIONAL_HASHTAGS: [5 additional relevant hashtags separated by spaces, all starting with #]' : ''}`
                        }
                    ]
                };
                
                console.log("Sending request to OpenRouter:", requestBody);
                
                const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
                    method: "POST",
                    headers: {
                        "Authorization": `Bearer ${apiKey}`,
                        "HTTP-Referer": window.location.href,
                        "X-Title": "TikTok Title & Description Generator",
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(requestBody)
                });
                
                const data = await response.json();
                
                console.log("Response from OpenRouter:", data);
                
                // Hide loader
                document.getElementById("loader").style.display = "none";
                
                if (data.error) {
                    // Show detailed error message
                    console.error("API Error:", data.error);
                    // Use fallback generation instead
                    generateFallbackContent(topic, style, targetAudience, keywords, autoHashtags, selectedHashtags);
                    return;
                }
                
                if (data.choices && data.choices[0] && data.choices[0].message && data.choices[0].message.content) {
                    const content = data.choices[0].message.content;
                    
                    console.log("Generated content:", content);
                    
                    // Extract title and description
                    const titleMatch = content.match(/TITLE:\s*(.*?)(?=\n|$)/i);
                    const descriptionMatch = content.match(/DESCRIPTION:\s*(.*?)(?=\n|$)/i);
                    const hashtagsMatch = autoHashtags ? content.match(/ADDITIONAL_HASHTAGS:\s*(.*?)(?=\n|$)/i) : null;
                    
                    if (titleMatch && descriptionMatch) {
                        let title = titleMatch[1].trim();
                        let description = descriptionMatch[1].trim();
                        
                        // Add AI generated marker to title if not present
                        if (!title.includes("এআই জেনারেটেড") && 
                            !title.includes("এআই দিয়ে") && 
                            !title.includes("AI GENERATED")) {
                            
                            // Don't add marker if already mentions AI
                            if (!(title.includes("AI") || title.includes("এআই"))) {
                                title = addAIGeneratedNote(title, isBangla);
                            }
                        }
                        
                        // Add AI generated tag to description if not already present
                        if (!description.includes("এআই জেনারেটেড") && 
                            !description.includes("এআই দিয়ে") && 
                            !description.includes("AI GENERATED") &&
                            !description.includes("Generated with AI")) {
                            
                            const aiGeneratedTag = isBangla ? " | এআই দিয়ে জেনারেট করা" : " | Generated with AI";
                            if (description.length + aiGeneratedTag.length <= 150) {
                                description += aiGeneratedTag;
                            }
                        }
                        
                        document.getElementById("generated-title").textContent = title;
                        document.getElementById("generated-description").textContent = description;
                        document.getElementById("result").style.display = "block";
                        
                        // Handle auto-generated hashtags
                        if (autoHashtags && hashtagsMatch) {
                            const additionalHashtags = hashtagsMatch[1].trim().split(/\s+/);
                            const hashtagsContainer = document.getElementById("generated-hashtags");
                            hashtagsContainer.innerHTML = "";
                            
                            // Store all hashtags for copying
                            const allHashtags = [...selectedHashtags, ...additionalHashtags].join(" ");
                            document.getElementById("all-hashtags").textContent = allHashtags;
                            
                            // Display each hashtag with animation delay
                            additionalHashtags.forEach((hashtag, index) => {
                                const hashtagElement = document.createElement("span");
                                hashtagElement.textContent = hashtag;
                                hashtagElement.className = "hashtag";
                                hashtagElement.style.animationDelay = `${0.1 * index}s`;
                                hashtagsContainer.appendChild(hashtagElement);
                            });
                        } else if (autoHashtags) {
                            // If we didn't get hashtags but should have, create some basic ones
                            const backupHashtags = isBangla ? 
                                ["#ভাইরাল", "#ট্রেন্ডিং", "#টিকটক", "#ok", "#বাংলা"] :
                                ["#tiktok", "#viral", "#trending", "#fyp", "#ok"];
                            
                            const hashtagsContainer = document.getElementById("generated-hashtags");
                            hashtagsContainer.innerHTML = "";
                            
                            document.getElementById("all-hashtags").textContent = backupHashtags.join(" ");
                            
                            backupHashtags.forEach((hashtag, index) => {
                                const hashtagElement = document.createElement("span");
                                hashtagElement.textContent = hashtag;
                                hashtagElement.className = "hashtag";
                                hashtagElement.style.animationDelay = `${0.1 * index}s`;
                                hashtagsContainer.appendChild(hashtagElement);
                            });
                        }
                    } else {
                        // If we can't find the format, use fallback generation
                        generateFallbackContent(topic, style, targetAudience, keywords, autoHashtags, selectedHashtags);
                    }
                } else {
                    console.error("Invalid API response structure:", data);
                    // Use fallback generation
                    generateFallbackContent(topic, style, targetAudience, keywords, autoHashtags, selectedHashtags);
                }
                
            } catch (error) {
                console.error("Error:", error);
                document.getElementById("loader").style.display = "none";
                // Use fallback generation
                generateFallbackContent(topic, style, targetAudience, keywords, autoHashtags, selectedHashtags);
            }
        });
        
        // Fallback content generator that doesn't rely on API
        function generateFallbackContent(topic, style, targetAudience, keywords, autoHashtags, selectedHashtags) {
            console.log("Using fallback content generation");
            
            // Detect if the input is in Bangla
            const isBangla = containsBangla(topic);
            console.log("Fallback generator - Is Bangla detected:", isBangla);
            
            // Add AI-specific terms to ensure we can reference AI in titles
            const aiTerms = isBangla ? 
                ["এআই", "কৃত্রিম বুদ্ধিমত্তা", "এআই-পাওয়ার্ড", "এআই টুল", "এআই জেনারেটর", 
                "এআই সৃষ্টি", "এআই দিয়ে তৈরি", "চ্যাটজিপিটি", "এআই ম্যাজিক", "এআই প্রযুক্তি"] :
                ["AI", "artificial intelligence", "AI-powered", "AI tool", "AI generator", 
                "AI creation", "generated with AI", "ChatGPT", "AI magic", "AI technology"];
                
            const randomAiTerm = aiTerms[Math.floor(Math.random() * aiTerms.length)];
            
            // Templates for titles based on style, with more variation and AI references
            const titleTemplates = {
                "entertaining": [
                    "🤣 অপেক্ষা করুন... {randomEmoji} {topicWord} #Made with {randomAiTerm}",
                    "You won't believe what {randomAiTerm} did when I {topicAction}",
                    "POV: When {topicAction} goes viral with {randomAiTerm} 😂",
                    "This {randomAiTerm} {topicWord} hack is going viral for a reason 🔥",
                    "I tried the trending {topicWord} challenge with {randomAiTerm} 😱",
                    "{randomAiTerm} created this {topicWord} and I'm obsessed",
                    "What happens when {randomAiTerm} tries to {topicAction}? 👀",
                    "This {topicWord} video was made by {randomAiTerm} 🤯",
                    "My {randomAiTerm} wrote this {topicWord} script and I'm dying 💀"
                ],
                "educational": [
                    "How to {topicAction} in under 60 seconds with {randomAiTerm} ✅",
                    "3 {topicWord} tips from {randomAiTerm} I wish I knew earlier 📚",
                    "Learn this {topicWord} technique that {randomAiTerm} revealed",
                    "The secret to mastering {topicWord} using {randomAiTerm}",
                    "{topicWord} explained by {randomAiTerm}: What you need to know 🧠",
                    "{randomAiTerm} taught me this {topicWord} hack in seconds",
                    "How {randomAiTerm} can transform your {topicWord} skills fast ⚡",
                    "I asked {randomAiTerm} about {topicWord} and was shocked",
                    "{randomAiTerm} vs Humans: Who's better at {topicWord}? 🤔"
                ],
                "inspirational": [
                    "This is your sign to start {topicAction} with {randomAiTerm} today ✨",
                    "How {randomAiTerm} transformed my {topicWord} journey 🌟",
                    "Believe in yourself: How {randomAiTerm} changed my {topicWord} story",
                    "From zero to hero: My {topicWord} journey using {randomAiTerm}",
                    "Never give up on your {topicWord} dreams with help from {randomAiTerm} 💫",
                    "{randomAiTerm} helped me overcome my {topicWord} struggles",
                    "The future of {topicWord} is here with {randomAiTerm} ✨",
                    "My life changed when I used {randomAiTerm} for {topicWord}",
                    "What {randomAiTerm} taught me about {topicWord} and life 💭"
                ],
                "tutorial": [
                    "Step-by-step {topicWord} tutorial using {randomAiTerm} (save this!) 📝",
                    "DIY {topicWord} guide with {randomAiTerm} you NEED to see",
                    "How to {topicAction} using {randomAiTerm} (beginner friendly)",
                    "Master {topicWord} in 30 seconds with {randomAiTerm}",
                    "Easy {topicWord} hack everyone should know (thanks to {randomAiTerm}) 💯",
                    "{randomAiTerm} showed me how to {topicAction} faster than pros",
                    "This {randomAiTerm} {topicWord} tutorial will blow your mind",
                    "I let {randomAiTerm} teach me {topicWord} for a week...",
                    "{randomAiTerm} vs traditional {topicWord} methods: which wins? 🏆"
                ],
                "storytelling": [
                    "Story time: What happened when I used {randomAiTerm} for {topicWord} 📖",
                    "My honest {topicWord} experience with {randomAiTerm} (not clickbait)",
                    "POV: The day {randomAiTerm} changed my {topicWord} forever",
                    "Life update: My {topicWord} journey with {randomAiTerm} so far",
                    "The truth about {topicWord} and {randomAiTerm} nobody tells you 👀",
                    "I let {randomAiTerm} control my {topicWord} for a day",
                    "What {randomAiTerm} taught me about {topicWord} changed everything",
                    "Confessing how {randomAiTerm} helped my {topicWord} journey",
                    "When {randomAiTerm} wrote my {topicWord} story... 😳"
                ],
                "trending": [
                    "Trying the viral {topicWord} trend with {randomAiTerm} 🔥",
                    "This {randomAiTerm} {topicWord} hack is breaking the internet",
                    "Everyone is doing this {topicWord} challenge with {randomAiTerm} 🚀",
                    "I tested the trending {topicWord} method using {randomAiTerm}",
                    "Jumping on the {topicWord} trend with {randomAiTerm}... worth it? ✨",
                    "{randomAiTerm} recreated this viral {topicWord} trend perfectly",
                    "When {randomAiTerm} tries the {topicWord} trend 😅",
                    "POV: You let {randomAiTerm} create your {topicWord} content",
                    "This {topicWord} went viral after I used {randomAiTerm} 📈"
                ]
            };
            
            // Bangla title templates
            const banglaTitleTemplates = {
                "entertaining": [
                    "🤣 অপেক্ষা করুন... {randomEmoji} {topicWord} #{randomAiTerm} দিয়ে তৈরি",
                    "আপনি বিশ্বাস করবেন না যখন {randomAiTerm} {topicAction} করলো",
                    "POV: যখন {topicAction} {randomAiTerm} এর সাথে ভাইরাল হয় 😂",
                    "এই {randomAiTerm} {topicWord} হ্যাক ভাইরাল হচ্ছে কারণ 🔥",
                    "আমি {randomAiTerm} দিয়ে ট্রেন্ডিং {topicWord} চ্যালেঞ্জ করলাম 😱",
                    "{randomAiTerm} এই {topicWord} তৈরি করেছে এবং আমি অবাক",
                    "কি হয় যখন {randomAiTerm} {topicAction} চেষ্টা করে? 👀",
                    "এই {topicWord} ভিডিও {randomAiTerm} দ্বারা তৈরি করা হয়েছে 🤯",
                    "এআই দিয়ে জেনারেট: {topicWord} ভিডিও",
                    "এআই জেনারেটেড {topicWord} কন্টেন্ট - এটা কি ভালো? 👀"
                ],
                "educational": [
                    "কিভাবে {randomAiTerm} দিয়ে ৬০ সেকেন্ডে {topicAction} করবেন ✅",
                    "{randomAiTerm} থেকে ৩টি {topicWord} টিপস যা আমি আগে জানতাম না 📚",
                    "এই {topicWord} কৌশল শিখুন যা {randomAiTerm} প্রকাশ করেছে",
                    "{randomAiTerm} ব্যবহার করে {topicWord} মাস্টারিং এর গোপন",
                    "{randomAiTerm} দ্বারা ব্যাখ্যা করা {topicWord}: যা আপনার জানা দরকার 🧠",
                    "এআই জেনারেটেড: {topicWord} শিক্ষামূলক ভিডিও",
                    "এআই তৈরি {topicWord} টিউটোরিয়াল - কোনো মানুষ ছাড়াই ⚡"
                ],
                "inspirational": [
                    "এটি আপনার সংকেত আজই {randomAiTerm} সহ {topicAction} শুরু করার ✨",
                    "কিভাবে {randomAiTerm} আমার {topicWord} যাত্রা পরিবর্তন করেছে 🌟",
                    "নিজের উপর বিশ্বাস রাখুন: কিভাবে {randomAiTerm} আমার {topicWord} গল্প পরিবর্তন করেছে",
                    "{randomAiTerm} ব্যবহার করে শূন্য থেকে হিরো: আমার {topicWord} যাত্রা",
                    "{randomAiTerm} এর সাহায্যে আপনার {topicWord} স্বপ্ন ছেড়ে দেবেন না 💫",
                    "এআই দ্বারা জেনারেট: আপনার {topicWord} জীবন পরিবর্তন করুন ✨",
                    "এআই জেনারেটেড অনুপ্রেরণা: {topicWord} সম্পর্কে আপনার চিন্তা বদলে দিন 🌟"
                ],
                "tutorial": [
                    "{randomAiTerm} ব্যবহার করে ধাপে ধাপে {topicWord} টিউটোরিয়াল (সংরক্ষণ করুন!) 📝",
                    "{randomAiTerm} সহ DIY {topicWord} গাইড যা আপনাকে দেখতে হবে",
                    "কিভাবে {randomAiTerm} ব্যবহার করে {topicAction} করবেন (নতুনদের জন্য)",
                    "{randomAiTerm} দিয়ে ৩০ সেকেন্ডে {topicWord} মাস্টার করুন",
                    "সহজ {topicWord} হ্যাক যা সবাই জানা উচিত ({randomAiTerm} ধন্যবাদ) 💯",
                    "এআই জেনারেটেড: {topicWord} শেখার সেরা উপায়",
                    "এআই দিয়ে তৈরি টিউটোরিয়াল: কিভাবে {topicWord} মাস্টার করবেন 👨‍🏫"
                ],
                "storytelling": [
                    "গল্প সময়: {topicWord} জন্য যখন আমি {randomAiTerm} ব্যবহার করলাম কি হলো 📖",
                    "{randomAiTerm} সহ আমার সত্যিকারের {topicWord} অভিজ্ঞতা (ক্লিকবেইট নয়)",
                    "POV: সেই দিন যখন {randomAiTerm} আমার {topicWord} চিরতরে পরিবর্তন করলো",
                    "জীবন আপডেট: {randomAiTerm} সহ আমার {topicWord} যাত্রা এখন পর্যন্ত",
                    "{topicWord} এবং {randomAiTerm} সম্পর্কে সত্য যা কেউ আপনাকে বলে না 👀",
                    "এআই দ্বারা জেনারেট করা গল্প: {topicWord} সম্পর্কে একটি অবিশ্বাস্য কাহিনী",
                    "এআই জেনারেটেড স্টোরিটেলিং: আমার {topicWord} অভিজ্ঞতা"
                ],
                "trending": [
                    "{randomAiTerm} সহ ভাইরাল {topicWord} ট্রেন্ড চেষ্টা করছি 🔥",
                    "এই {randomAiTerm} {topicWord} হ্যাক ইন্টারনেট ভেঙে ফেলছে",
                    "সবাই {randomAiTerm} সহ এই {topicWord} চ্যালেঞ্জ করছে 🚀",
                    "আমি {randomAiTerm} ব্যবহার করে ট্রেন্ডিং {topicWord} পদ্ধতি পরীক্ষা করলাম",
                    "এআই জেনারেটেড: {topicWord} নিয়ে নতুন ট্রেন্ড",
                    "এআই দিয়ে তৈরি: {topicWord} ভাইরাল ট্রেন্ড চ্যালেঞ্জ"
                ],
                "ai": [
                    "আমি {randomAiTerm} কে {topicWord} কন্টেন্ট তৈরি করতে বললাম এবং... 👀",
                    "যখন {randomAiTerm} আপনার {topicWord} ভাইরাল করে 🔥",
                    "{randomAiTerm} বনাম আমি: {topicWord} চ্যালেঞ্জ",
                    "এই {topicWord} ১০০% {randomAiTerm} দ্বারা তৈরি করা হয়েছে 🤯",
                    "আপনি বিশ্বাস করবেন না {randomAiTerm} আমার {topicWord} জন্য কি তৈরি করেছে 😱",
                    "এআই জেনারেটেড: এই {topicWord} কন্টেন্ট সম্পূর্ণরূপে এআই দ্বারা তৈরি",
                    "১০০% এআই দিয়ে জেনারেট: {topicWord} কন্টেন্ট",
                    "এআই দ্বারা নির্মিত: আশ্চর্যজনক {topicWord} কন্টেন্ট ✨"
                ]
            };
            
            // Let's explicitly add an "AI generated" note to the title and description
            function addAIGeneratedNote(text, isBangla) {
                const englishNote = "[AI GENERATED] ";
                const banglaNote = "【এআই জেনারেটেড】 ";
                
                // Add the appropriate note based on language
                return (isBangla ? banglaNote : englishNote) + text;
            }
            
            // Templates for descriptions based on style
            const descriptionTemplates = [
                "Never thought {topicWord} could be this {adjective}! {keywords}",
                "The {adjective} way to {topicAction}! Follow for more {topicWord} content {keywords}",
                "Part {part} of my {topicWord} series with {randomAiTerm}! Like for Part {nextPart} {keywords}",
                "Comment if you want more {topicWord} tips & tricks from {randomAiTerm}! {keywords}",
                "Tag someone who needs this {topicWord} advice powered by {randomAiTerm}! {keywords}",
                "Drop a ❤️ if this {randomAiTerm} {topicWord} content helped you {keywords}",
                "I'm obsessed with what {randomAiTerm} can do for {topicWord}! Are you? {keywords}",
                "{randomAiTerm} helped create this {adjective} content! RT if you love it {keywords}",
                "Created with help from {randomAiTerm}. Follow for more {topicWord} hacks! {keywords}",
                "This {topicWord} strategy was generated by {randomAiTerm} & it's {adjective}! {keywords}",
                "Should I keep letting {randomAiTerm} help with my {topicWord} content? Comment below! {keywords}",
                "The future of {topicWord} is here thanks to {randomAiTerm}! Watch till end {keywords}",
                "Using {randomAiTerm} for {topicWord} changed everything. Follow my journey! {keywords}"
            ];
            
            // Bangla description templates
            const banglaDescriptionTemplates = [
                "【এআই জেনারেটেড】 কখনো ভাবিনি {topicWord} এত {adjective} হতে পারে! {keywords}",
                "【এআই তৈরি】 {topicAction} করার {adjective} উপায়! আরও {topicWord} কন্টেন্টের জন্য অনুসরণ করুন {keywords}",
                "【এআই দ্বারা লেখা】 আমার {topicWord} সিরিজের {part} পর্ব {randomAiTerm} সহ! {nextPart} পর্বের জন্য লাইক করুন {keywords}",
                "【এআই জেনারেটেড】 {randomAiTerm} থেকে আরও {topicWord} টিপস ও ট্রিকস চাইলে কমেন্ট করুন! {keywords}",
                "【এআই দিয়ে তৈরি】 এমন কাউকে ট্যাগ করুন যার এই {randomAiTerm} দ্বারা {topicWord} পরামর্শ প্রয়োজন! {keywords}",
                "【এআই কন্টেন্ট】 এই {randomAiTerm} {topicWord} কন্টেন্ট আপনাকে সাহায্য করলে ❤️ দিন {keywords}",
                "【এআই জেনারেটেড】 আমি অবাক যে {randomAiTerm} {topicWord} জন্য কি করতে পারে! আপনি? {keywords}",
                "【এআই দ্বারা সৃষ্ট】 {randomAiTerm} এই {adjective} কন্টেন্ট তৈরিতে সাহায্য করেছে! {keywords}",
                "【এআই নির্মিত】 {randomAiTerm} এর সাহায্যে তৈরি। আরও {topicWord} হ্যাকসের জন্য অনুসরণ করুন! {keywords}"
            ];
            
            // Extract a key action or word from the topic
            const topicWords = topic.split(/\s+/);
            const topicWord = topicWords[topicWords.length > 2 ? 1 : 0] || (isBangla ? "কন্টেন্ট" : "content");
            
            // Create an action from the topic
            const topicAction = topic.toLowerCase().includes(isBangla ? "কিভাবে" : "how") ? 
                topic.toLowerCase().split(isBangla ? "কিভাবে" : "how")[1].trim() : 
                (isBangla ? `${topicWord} ব্যবহার` : `use ${topicWord}`);
            
            // Get a random adjective based on target audience
            const audienceAdjs = isBangla ? 
                (banglaAudienceAdjectives[targetAudience] || ["অসাধারণ", "চমৎকার", "অবিশ্বাস্য"]) :
                (audienceAdjectives[targetAudience] || ["amazing", "awesome", "incredible"]);
            const adjective = audienceAdjs[Math.floor(Math.random() * audienceAdjs.length)];
            
            // Random part number for series content
            const part = Math.floor(Math.random() * 5) + 1;
            const nextPart = part + 1;
            
            // Randomize style selection for more variety (sometimes use AI-specific titles)
            let templateStyle = style;
            // 30% chance to use AI-specific titles regardless of chosen style
            if (Math.random() < 0.3) {
                templateStyle = "ai";
            }
            
            // Select a title template based on style and language
            const templatesForStyle = isBangla ? 
                (banglaTitleTemplates[templateStyle] || banglaTitleTemplates["entertaining"]) :
                (titleTemplates[templateStyle] || titleTemplates["entertaining"]);
            
            const titleTemplate = templatesForStyle[Math.floor(Math.random() * templatesForStyle.length)];
            
            // Generate the title with more variables
            let titleGenerated = titleTemplate
                .replace(/{topicWord}/g, topicWord)
                .replace(/{topicAction}/g, topicAction)
                .replace(/{randomAiTerm}/g, randomAiTerm)
                .replace(/{randomEmoji}/g, randomEmoji);
                
            // Add AI generated marker to the beginning if it doesn't already have one
            if (!titleGenerated.includes("এআই জেনারেটেড") && 
                !titleGenerated.includes("এআই দিয়ে") && 
                !titleGenerated.includes("AI GENERATED")) {
                titleGenerated = addAIGeneratedNote(titleGenerated, isBangla);
            }
            
            // Select a description template based on language
            const descTemplates = isBangla ? banglaDescriptionTemplates : descriptionTemplates;
            const descTemplate = descTemplates[Math.floor(Math.random() * descTemplates.length)];
            
            // Generate the description
            let descriptionGenerated = descTemplate
                .replace(/{topicWord}/g, topicWord)
                .replace(/{topicAction}/g, topicAction)
                .replace(/{adjective}/g, adjective)
                .replace(/{part}/g, part)
                .replace(/{nextPart}/g, nextPart)
                .replace(/{keywords}/g, keywords)
                .replace(/{randomAiTerm}/g, randomAiTerm);
            
            // Add AI generated tag at the end if not already present
            if (!descriptionGenerated.includes("এআই জেনারেটেড") && 
                !descriptionGenerated.includes("এআই দিয়ে") && 
                !descriptionGenerated.includes("AI GENERATED") &&
                !descriptionGenerated.includes("Generated with AI")) {
                const aiGeneratedTag = isBangla ? " | এআই দিয়ে জেনারেট করা" : " | Generated with AI";
                if (descriptionGenerated.length + aiGeneratedTag.length <= 150) {
                    descriptionGenerated += aiGeneratedTag;
                }
            }
            
            // Display the generated content
            document.getElementById("generated-title").textContent = titleGenerated;
            document.getElementById("generated-description").textContent = descriptionGenerated;
            document.getElementById("result").style.display = "block";
            
            // Generate additional hashtags if auto-hashtags is enabled
            let additionalHashtags = [];
            if (autoHashtags) {
                // For Bangla, we need to handle hashtag generation differently
                if (isBangla) {
                    // Common Bangla hashtags
                    const banglaHashtagPool = [
                        "#ভাইরাল", "#ট্রেন্ডিং", "#টিকটক", "#ফিউচার", "#বাংলা", 
                        "#বাংলাদেশ", "#ভিডিও", "#শেয়ার", "#ok", "#লাইক", "#কমেন্ট"
                    ];
                    
                    // Always include #ok
                    if (!banglaHashtagPool.includes("#ok")) {
                        banglaHashtagPool.push("#ok");
                    }
                    
                    // Get random hashtags
                    additionalHashtags = [];
                    const numHashtags = Math.min(5, banglaHashtagPool.length);
                    
                    for (let i = 0; i < numHashtags; i++) {
                        const randomIndex = Math.floor(Math.random() * banglaHashtagPool.length);
                        additionalHashtags.push(banglaHashtagPool[randomIndex]);
                        banglaHashtagPool.splice(randomIndex, 1);
                    }
                } else {
                    additionalHashtags = generateHashtags(topic);
                }
            }
            
            // Display hashtags
            if (autoHashtags) {
                const hashtagsContainer = document.getElementById("generated-hashtags");
                hashtagsContainer.innerHTML = "";
                
                // Store all hashtags for copying
                const allHashtags = [...selectedHashtags, ...additionalHashtags].join(" ");
                document.getElementById("all-hashtags").textContent = allHashtags;
                
                // Display each hashtag with animation delay
                additionalHashtags.forEach((hashtag, index) => {
                    const hashtagElement = document.createElement("span");
                    hashtagElement.textContent = hashtag;
                    hashtagElement.className = "hashtag";
                    hashtagElement.style.animationDelay = `${0.1 * index}s`;
                    hashtagsContainer.appendChild(hashtagElement);
                });
            }
        }
        
        function copyToClipboard(elementId) {
            const text = document.getElementById(elementId).textContent;
            navigator.clipboard.writeText(text).then(() => {
                // Create a toast notification
                const toast = document.createElement('div');
                toast.textContent = 'Copied to clipboard!';
                toast.style.position = 'fixed';
                toast.style.bottom = '20px';
                toast.style.left = '50%';
                toast.style.transform = 'translateX(-50%)';
                toast.style.background = 'rgba(0,0,0,0.7)';
                toast.style.color = 'white';
                toast.style.padding = '10px 20px';
                toast.style.borderRadius = '5px';
                toast.style.zIndex = '1000';
                
                document.body.appendChild(toast);
                
                // Remove after 2 seconds
                setTimeout(() => {
                    toast.style.opacity = '0';
                    toast.style.transition = 'opacity 0.5s ease';
                    setTimeout(() => {
                        document.body.removeChild(toast);
                    }, 500);
                }, 2000);
            }).catch(err => {
                console.error('Failed to copy: ', err);
            });
        }

        // Add a function to detect Bangla script
        function containsBangla(text) {
            // Bangla Unicode range: \u0980-\u09FF
            const banglaRegex = /[\u0980-\u09FF]/;
            return banglaRegex.test(text);
        }

        // Generate random emoji for title templates
        function randomEmoji() {
            const emojis = ["😱", "🔥", "✨", "💯", "🤯", "👀", "🚀", "💫", "🙌", "🎯", "⚡", "💥", "😍", "👑", "✅", "💪"];
            return emojis[Math.floor(Math.random() * emojis.length)];
        }

        // Generate relevant hashtags based on topic
        function generateHashtags(topic) {
            // Common TikTok hashtags
            const commonHashtags = ["#fyp", "#foryou", "#viral", "#trending"];
            
            // Extract some words from the topic to create topic-specific hashtags
            const words = topic.toLowerCase().split(/\s+/).filter(word => word.length > 3);
            const topicHashtags = words.map(word => `#${word.replace(/[^a-z0-9]/g, '')}`).filter(tag => tag.length > 4);
            
            // Always include #fyp and #ok
            let result = ["#fyp", "#ok"];
            
            // Add some common hashtags
            result.push(commonHashtags[Math.floor(Math.random() * commonHashtags.length)]);
            
            // Add topic-specific hashtags
            if (topicHashtags.length > 0) {
                // Get up to 3 topic hashtags
                const numTopicTags = Math.min(3, topicHashtags.length);
                for (let i = 0; i < numTopicTags; i++) {
                    const randomIndex = Math.floor(Math.random() * topicHashtags.length);
                    result.push(topicHashtags[randomIndex]);
                    topicHashtags.splice(randomIndex, 1);
                }
            }
            
            // Add additional common hashtags if we don't have enough
            if (result.length < 5) {
                const extraTags = ["#tiktok", "#content", "#creator", "#viralvideo"];
                const numExtraTags = 5 - result.length;
                for (let i = 0; i < numExtraTags; i++) {
                    result.push(extraTags[Math.floor(Math.random() * extraTags.length)]);
                }
            }
            
            return result;
        }
    </script>
</body>
</html>
